---
version: "3"

services:
  alertmanager:
    command:
      - "--config.file=/config.yml"
    container_name: alertmanager
    hostname: alertmanager
    image: prom/alertmanager:v0.22.2
    ports:
      - 9093:9093
    restart: unless-stopped
    volumes:
      - alertmanager:/alertmanager
      - ./docker-configs/alertmanager/config.yml:/config.yml:ro

  cadvisor:
    container_name: cadvisor
    hostname: cadvisor
    image: gcr.io/google-containers/cadvisor:v0.36.0
    ports:
      - 8080:8080
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  diun:
    container_name: diun
    environment:
      - TZ=${timezone}
      - LOG_LEVEL=info
      - LOG_JSON=false
      - DIUN_DB_PATH=diun.db
      - DIUN_WATCH_WORKERS=20
      - DIUN_WATCH_SCHEDULE=0 0 8 ? * SAT
      - DIUN_WATCH_FIRSTCHECKNOTIF=false
      - DIUN_WATCH_COMPAREDIGEST=true
      - DIUN_NOTIF_PUSHOVER_TOKEN=${pushover_user_key}
      - DIUN_NOTIF_PUSHOVER_RECIPIENT=${diun_pushover_token}
      - DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true
      - DIUN_PROVIDERS_DOCKER_WATCHSTOPPED=false
    hostname: diun
    image: crazymax/diun:4.17.0
    restart: always
    volumes:
      - diun:/data
      - /var/run/docker.sock:/var/run/docker.sock

  duplicati:
    container_name: duplicati
    environment:
      - TZ=${timezone}
      - GUID=${gid}
      - PUID=${uid}
    hostname: duplicati
    image: linuxserver/duplicati:v2.0.6.3-2.0.6.3_beta_2021-06-17-ls102
    ports:
      - 8200:8200
    restart: unless-stopped
    volumes:
      - duplicati:/config
      - duplicati_local:/backups
      - /var/lib/docker/volumes:/source
      - ${data_folder_path}:/srv:ro

  grafana:
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${grafana_password}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    hostname: grafana
    image: grafana/grafana:7.5.8
    ports:
      - 3000:3000
    restart: unless-stopped
    user: root
    volumes:
      - grafana:/var/lib/grafana
      - ./docker-configs/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./docker-configs/grafana/provisioning/plugins:/var/lib/grafana/plugins
      - ./docker-configs/grafana/provisioning:/etc/grafana/provisioning

  homer:
    container_name: homer
    hostname: homer
    image: b4bz/homer:21.03.2
    ports:
      - 8888:8080
    restart: unless-stopped
    volumes:
      - homer:/www/assets
      - ./docker-configs/homer/icons:/www/assets/icons
      - ./docker-configs/homer/config.yml:/www/config.yml:ro

  jackett:
    container_name: jackett
    depends_on:
      - transmission
    environment:
      - TZ=${timezone}
      - AUTO_UPDATE=true
    hostname: jackett
    image: linuxserver/jackett:v0.18.345-ls33
    ports:
      - 9117:9117
    restart: unless-stopped
    volumes:
      - jackett:/config

  lazylibrarian:
    container_name: lazylibrarian
    depends_on:
      - transmission
    environment:
      - TZ=${timezone}
      - GUID=${gid}
      - PUID=${uid}
    hostname: lazylibrarian
    image: linuxserver/lazylibrarian:8e4bf962-ls27
    ports:
      - 5299:5299
    restart: unless-stopped
    volumes:
      - lazylibrarian:/config
      - ${data_folder_path}:/books

  lidarr:
    container_name: lidarr
    depends_on:
      - transmission
    environment:
      - TZ=${timezone}
      - GUID=${gid}
      - PUID=${uid}
    hostname: lidarr
    image: linuxserver/lidarr:0.8.1.2135-ls50
    ports:
      - 8686:8686
    restart: unless-stopped
    volumes:
      - lidarr:/config
      - ${data_folder_path}:/data

  node-exporter:
    container_name: node-exporter
    hostname: node-exporter
    image: prom/node-exporter:v1.1.2
    ports:
      - 9100:9100
    restart: unless-stopped
    volumes:
      - ${data_folder_path}:/data:ro

  plex:
    container_name: plex
    environment:
      - TZ=${timezone}
      - PLEX_CLAIM=${plex_claim_token}
      - ADVERTISE_IP=https://plex.${traefik_duckdns_domain}:443,https://${docker_host_ip}:32400
      - ALLOWED_NETWORKS=${docker_host_network_cidr}
      - HOSTNAME=${plex_hostname}
    hostname: plex
    image: plexinc/pms-docker:1.23.3.4707-ebb5fe9f3
    labels:
      - traefik.enable=true
      - traefik.http.services.plex.loadbalancer.server.port=32400
      - traefik.http.routers.plex.rule=Host(`plex.${traefik_duckdns_domain}`)
      - traefik.http.routers.plex.entrypoints=https
      - traefik.http.routers.plex.tls=true
      - traefik.http.routers.plex.tls.certresolver=letsencrypt
      - traefik.http.routers.plex.middlewares=plex-headers
      - traefik.http.middlewares.plex-headers.headers.accesscontrolalloworiginlist=https://plex.${traefik_duckdns_domain}
      - "traefik.http.middlewares.plex-headers.headers.contentSecurityPolicy=default-src 'none'; base-uri 'self'; script-src 'self' 'sha256-4yWHSc589xcanc7GAAy3++M4EvUxNtUsJySeoYEE6z8=' 'sha256-9YWnVu29Ew4LEW4tEiPWEdcHvzlbbwpiazu4PZR3oTY='; style-src 'self'; img-src 'self' https://provider-static.plex.tv data: blob:; font-src 'self' data:; connect-src 'self' https://plex.tv https://*.plex.direct:* wss://*.plex.direct:* wss://pubsub.plex.tv; media-src 'self' https://*.plex.direct:*; object-src 'self'; child-src 'none'; frame-src 'none'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests; block-all-mixed-content; referrer no-referrer"
      #- diun.watch_repo=true
      #- diun.include_tags=^\d+\.\d+\..*
      #- diun.exclude_tags=^latest$$;^plexpass$$;^public$$;^beta$$
      #- diun.max_tags=10
    ports:
      - 32400:32400/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: unless-stopped
    volumes:
      - plex:/config
      - ./docker-configs/plex/personal-media-scanner/Series:/config/Library/Application\ Support/Plex\ Media\ Server/Scanners/Series:ro
      - ./docker-configs/plex/personal-media-scanner/ExtendedPersonalMedia-Agent.bundle:/config/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/ExtendedPersonalMedia-Agent.bundle
      - plex_transcode:/transcode
      - ${data_folder_path}:/data:ro

  portainer:
    container_name: portainer
    hostname: portainer
    image: portainer/portainer-ce:2.5.1
    ports:
      - 9000:9000
      #- 8000:8000
    restart: unless-stopped
    volumes:
      - portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus:
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.route-prefix=/"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    container_name: prometheus
    environment:
      - TZ=${timezone}
    hostname: prometheus
    image: prom/prometheus:v2.27.1
    ports:
      - 9090:9090
    restart: unless-stopped
    user: root
    volumes:
      - prometheus:/prometheus
      - ./docker-configs/prometheus/alertrules.yml:/etc/prometheus/alertrules.yml:ro
      - ./docker-configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  radarr:
    container_name: radarr
    depends_on:
      - transmission
    environment:
      - TZ=${timezone}
      - GUID=${gid}
      - PUID=${uid}
    hostname: radarr
    image: linuxserver/radarr:3.2.2.5080-ls106
    ports:
      - 7878:7878
    restart: unless-stopped
    volumes:
      - radarr:/config
      - ${data_folder_path}:/data

  sonarr:
    container_name: sonarr
    depends_on:
      - transmission
    environment:
      - TZ=${timezone}
      - GUID=${gid}
      - PUID=${uid}
    hostname: sonarr
    image: linuxserver/sonarr:3.0.6.1196-ls108
    ports:
      - 8989:8989
    restart: unless-stopped
    volumes:
      - sonarr:/config
      - ${data_folder_path}:/data

  tailscale:
    container_name: tailscale
    hostname: geordi
    image: pleasestopasking/tailscale:1.10.0
    restart: unless-stopped
    volumes:
      - tailscale:/var/lib
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    command: tailscaled
    #network_mode: host
    # docker exec tailscale tailscale up --advertise-routes=${docker_host_network_cidr}
    # approve subnet relay in tailscale UI

  traefik:
    container_name: traefik
    environment:
      - DUCKDNS_TOKEN=${traefik_duckdns_token}
    hostname: traefik
    image: traefik:v2.4
    labels:
      - traefik.enable=true
      - traefik.http.routers.metrics.service=api@internal
      - traefik.http.routers.metrics.entrypoints=metrics
      - traefik.http.routers.metrics.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)
    ports:
      - 80:80
      - 443:443
      - 8441:8441
    restart: always
    volumes:
      - traefik:/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker-configs/traefik/traefik.yml:/traefik.yml:ro
      - ./docker-configs/traefik/configs:/configs:ro

  transmission:
    cap_add:
      - NET_ADMIN
    container_name: transmission
    environment:
      - CREATE_TUN_DEVICE=true
      - OPENVPN_PROVIDER=CUSTOM
      - OPENVPN_USERNAME=${transmission_openvpn_username}
      - OPENVPN_PASSWORD=${transmission_openvpn_password}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=${docker_host_network_cidr}
      - TZ=${timezone}
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
      - TRANSMISSION_WEB_UI=flood
      - TRANSMISSION_RATIO_LIMIT=1
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_WATCH_DIR_ENABLED=false
      - TRANSMISSION_LPD_ENABLED=true
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=30
      - TRANSMISSION_HOME=${transmission_home_dir}
      - TRANSMISSION_DOWNLOAD_DIR=${transmission_downloaded_dir}
      - TRANSMISSION_INCOMPLETE_DIR=${transmission_incomplete_dir}
    hostname: transmission
    image: haugene/transmission-openvpn:3.6
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - 9091:9091
    restart: unless-stopped
    volumes:
      - transmission:/config
      - ./docker-configs/transmission/us5804.nordvpn.com.udp1194.ovpn:/etc/openvpn/custom/default.ovpn:ro
      - ${data_folder_path}:/data

volumes:
  alertmanager:
    name: alertmanager

  diun:
    name: diun

  duplicati:
    name: duplicati

  duplicati_local:
    name: duplicati_local

  grafana:
    name: grafana

  homer:
    name: homer

  jackett:
    name: jackett

  lazylibrarian:
    name: lazylibrarian

  lidarr:
    name: lidarr

  plex:
    name: plex

  plex_transcode:
    name: plex_transcode

  portainer:
    name: portainer

  prometheus:
    name: prometheus

  radarr:
    name: radarr

  sonarr:
    name: sonarr

  tailscale:
    name: tailscale

  traefik:
    name: traefik

  transmission:
    name: transmission